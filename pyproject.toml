[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mac-doctor"
version = "0.1.0"
description = "An agentic AI assistant for macOS system diagnostics"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "Mac Doctor Team"}
]
keywords = ["macos", "diagnostics", "ai", "system-analysis", "performance"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Systems Administration",
    "Topic :: System :: Monitoring",
]

dependencies = [
    "typer>=0.9.0",
    "psutil>=5.9.0",
    "rich>=13.0.0",
    "langchain>=0.1.0",
    "langchain-ollama>=0.1.0",
    "langchain-google-genai>=1.0.0",
    "langgraph>=0.1.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
mac-doctor = "mac_doctor.cli.main:app"

[project.urls]
Homepage = "https://github.com/mac-doctor/mac-doctor"
Repository = "https://github.com/mac-doctor/mac-doctor"
Issues = "https://github.com/mac-doctor/mac-doctor/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["mac_doctor*"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mac_doctor"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=mac_doctor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--strict-markers",
    "-v"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "system: System tests",
    "e2e: End-to-end tests",
]